{%- extends 'base.html.j2' -%}
{% from 'mathjax.html.j2' import mathjax %}
{% from 'mermaidjs.html.j2' import mermaid_js %}
{% from 'jupyter_widgets.html.j2' import jupyter_widgets %}


{%- block header -%}
<!DOCTYPE html>
<html lang="{{ resources.language_code }}">
<head>
{%- block html_head -%}
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
{% set nb_title = nb.metadata.get('title', resources['metadata']['name']) | escape_html_keep_quotes %}
<title>{{nb_title}}</title>

{%- block html_head_js -%}
{%- block html_head_js_requirejs -%}
<script src="{{ resources.require_js_url }}"></script>
{%- endblock html_head_js_requirejs -%}
{%- endblock html_head_js -%}

{% block jupyter_widgets %}
  {%- if "widgets" in nb.metadata -%}
    {{ jupyter_widgets(resources.jupyter_widgets_base_url, resources.html_manager_semver_range, resources.widget_renderer_url) }}
  {%- endif -%}
{% endblock jupyter_widgets %}

{% block extra_css %}
{% endblock extra_css %}

{% for css in resources.inlining.css -%}
  <style type="text/css">
    {{ css }}
  </style>
{% endfor %}

{% block notebook_css %}
{{ resources.include_css("static/index.css") }}
{% if resources.theme == 'dark' %}
    {{ resources.include_css("static/theme-dark.css") }}
{% elif resources.theme == 'light'  %}
    {{ resources.include_css("static/theme-light.css") }}
{% else %}
    {{ resources.include_lab_theme(resources.theme) }}
{% endif %}
<style type="text/css">
/* Force rendering true colors when outputing to pdf */
* {
  -webkit-print-color-adjust: exact;
}

/* Misc */
a.anchor-link {
  display: none;
}

/* Input area styling */
.jp-InputArea {
  overflow: hidden;
}

.jp-InputArea-editor {
  overflow: hidden;
}

.cm-editor.cm-s-jupyter .highlight pre {
/* weird, but --jp-code-padding defined to be 5px but 4px horizontal padding is hardcoded for pre.cm-line */
  padding: var(--jp-code-padding) 4px;
  margin: 0;

  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  color: inherit;

}

.jp-OutputArea-output pre {
  line-height: inherit;
  font-family: inherit;
}

.jp-RenderedText pre {
  color: var(--jp-content-font-color1);
  font-size: var(--jp-code-font-size);
}

/* Hiding the collapser by default */
.jp-Collapser {
  display: none;
}

@page {
    margin: 0.5in; /* Margin for each printed piece of paper */
}

@media print {
  .jp-Cell-inputWrapper,
  .jp-Cell-outputWrapper {
    display: block;
  }
}
</style>

{% endblock notebook_css %}

{%- block html_head_js_mathjax -%}
{{ mathjax(resources.mathjax_url) }}
{%- endblock html_head_js_mathjax -%}

{%- block html_head_js_mermaidjs -%}
{{ mermaid_js(resources.mermaid_js_url) }}
{%- endblock html_head_js_mermaidjs -%}

{%- block html_head_css -%}
{%- endblock html_head_css -%}

{%- endblock html_head -%}
</head>
{%- endblock header -%}

{%- block body_header -%}
{% if resources.theme == 'dark' %}
<body class="jp-Notebook" data-jp-theme-light="false" data-jp-theme-name="JupyterLab Dark">
{% else %}
<body class="jp-Notebook" data-jp-theme-light="true" data-jp-theme-name="JupyterLab Light">
{% endif %}
<main >
{%- endblock body_header -%}

{% block body_footer %}
</main>
</body>
<script type="text/javascript">
// 自定义脚本
var base_url = '{{ resources.get('output_files_dir') }}';
var notebook_name = '{{ resources.get('metadata')['name'] }}';
var body = document.querySelector("body");
var main = document.querySelector("main");
var handleLinks = function() { // 处理 a 标签的跳转
  var links = document.getElementsByTagName("a");
  for (var i = 0; i < links.length; i++) {
    links[i].addEventListener("click", function (event) {
      event.preventDefault(); // 阻止默认的链接行为

      var url = this.href;

      if (!url.endsWith(".ipynb")) {
        if(url.endsWith(".html")) {
          window.open(url, "_self");
        } else {
          window.open(url, "_blank"); // 在新窗口中打开链接
        }
      } else {
        var match = url.match(/\/(\w+)\.ipynb/g);
        match = match[0];
        if (match) {
          window.location.href = "." + match.replace(".ipynb", ".html"); // 在当前窗口中跳转到其他页面
        }
      }
    });
  }
}
var handleStyle = function() { // 处理页面样式
  // body 标签样式
  body.style.height = "100vh";
  body.style.padding = "0";
  body.style.margin = "0";
  body.style.backgroundColor = "#f5f6f7";

  // main 标签样式
  main.style.backgroundColor = "#fff";
  if(body.offsetHeight > main.offsetHeight) {
    main.style.height = "calc(100% - 60px)";
  }
  main.style.maxWidth = "920px";
  main.style.margin = "0 auto";
  main.style.paddingTop = "60px";
}
var handleNav = function() { // 处理导航 Nav
  var nav = document.createElement('nav');
  nav.style.width = "100%";
  nav.style.position = "fixed";
  nav.style.top = 0;
  nav.style.left = 0;
  nav.style.background = "#fff";
  nav.style.boxShadow = "0 0 5px #888";
  nav.style.zIndex = "999";
  nav.innerHTML = `<div class="nav-wrapper">
    <div class="logo">Python</div>
    <ul class="list">
      <li class="list-item">
        <a href="./index.html">首页</a>
      </li>
      <li class="list-item" style="margin-left: 20px;">
        <a href="https://github.com/Da222Da/python">Github</a>
      </li>
    </ul>
  </div>` 

  // 插入节点
  const firstChild = body.firstChild;
  body.insertBefore(nav, firstChild);
}
window.onload = function () {
  handleStyle();
  handleNav();
  handleLinks();
};
</script>

{% endblock body_footer %}

{% block footer %}
{% block footer_js %}
{% endblock footer_js %}
{{ super() }}
</html>
{% endblock footer %}
